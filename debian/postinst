#!/bin/sh

set -e

# Source debconf library.
. /usr/share/debconf/confmodule

CONFIGFILE="/etc/alternc/local.sh"

update_var() {
    local question="$1"
    local var="$2"
    db_get "$question"
    if [ ! -z "$RET" ]; then
        grep -Eq "^ *$var=" $CONFIGFILE || echo "$var=" >> $CONFIGFILE
        SED_SCRIPT="$SED_SCRIPT;s\\^ *$var=.*\\$var=\"$RET\"\\"
    fi
}

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

case "$1" in
  configure)

    # build local.sh if it does not exist
    if [ ! -f $CONFIGFILE ]; then
        cat > $CONFIGFILE <<EOF
#!/bin/sh
#
# AlternC - Web Hosting System - Configuration
# This file will be modified on package configuration
# (e.g. upgrade or dpkg-reconfigure alternc)

# Hosting service name
HOSTING=""

# Primary hostname for this box (will be used to access the management panel)
FQDN=""

# Public IP
PUBLIC_IP=""

# Internal IP
# (most of the time, should be equal to PUBLIC_IP, unless you are behind
# firewall doing address translation)
INTERNAL_IP=""

# Monitoring IP or network (will be allowed to access Apache status)
MONITOR_IP=""

# Primary DNS hostname
NS1_HOSTNAME=""

# Secondary DNS hostname
NS2_HOSTNAME=""

# IP that have privilegied access to the DNS server. Separated by ';'.
BIND_INTERNAL=""

# Mail server hostname
DEFAULT_MX=""

# MySQL configuration
MYSQL_HOST=""
MYSQL_DATABASE=""
MYSQL_USER=""
MYSQL_PASS=""

# Folder holding data (used for quota management)
ALTERNC_LOC=""

# Networks that SMTP should relay, separated with spaces
SMTP_RELAY_NETWORKS=""
EOF

        chown root:www-data $CONFIGFILE
    fi

    for pair in \
    "alternc/desktopname FQDN" \
    "alternc/default_mx DEFAULT_MX" \
    "alternc/alternc_location ALTERNC_LOC" \
    "alternc/mysql/host MYSQL_HOST" \
    "alternc/mysql/db MYSQL_DATABASE" \
    "alternc/mysql/user MYSQL_USER" \
    "alternc/mysql/password MYSQL_PASS" \
    "alternc/public_ip DEFAULT_IP"
    do
      skip=0
      for single in $pair
      do
        if [ "$skip" = "0" ]; then
          db_get "$single" || true
	  skip=1
	else
	  echo "$single=\"$RET\"" >> /etc/alternc/local.sh
	fi
      done
    done

    # forget the password
    db_reset alternc/mysql/password || true
    db_fset alternc/mysql/password "seen" "false" || true

    if [ -e $CONFIGFILE ]; then
      # source local.sh variables
      . $CONFIGFILE
    fi

    # Erase all apacheconf file
    # They will be regenerated without the bug by upgrade_check.sh below.
    if dpkg --compare-versions "$2" le "0.9.3.9-globenet14"; then
        rm -f /var/alternc/apacheconf/*/*
        rm -f /var/alternc/apacheconf/override_php.conf
    fi

    echo "checking for upgrades"
    /usr/share/alternc/install/upgrade_check.sh $2

    # important: postinst gele sans ca
    db_stop

    # ensure our run dir for saslauthd is present in Debian stat database
    # (needed by /etc/init.d/saslauthd)
    PWDIR=/var/spool/postfix/var/run/saslauthd
    dpkg-statoverride --list $PWDIR 2>&1 >/dev/null ||
        dpkg-statoverride --update --add root sasl 710 $PWDIR
    
    # postfix needs to be in the sasl group for saslauthd connection
    adduser --quiet postfix sasl

    echo "config phpmyadmin"
    include_str='include_once("/etc/alternc/phpmyadmin.inc.php")'
    pma_config=/etc/phpmyadmin/config.inc.php
    if ! grep -e "$include_str" $pma_config > /dev/null 2>&1; then
        echo "<?php $include_str ?>" >> $pma_config
    fi

   if ! test -e /etc/apache-ssl/conf.d/phpmyadmin.conf; then
      if test -e /etc/phpmyadmin/apache.conf; then
                ln -s /etc/phpmyadmin/apache.conf /etc/apache-ssl/conf.d/phpmyadmin.conf
      fi
   fi

   if ! test -e /etc/apache/conf.d/phpmyadmin.conf; then
      if test -e /etc/phpmyadmin/apache.conf; then
                ln -s /etc/phpmyadmin/apache.conf /etc/apache/conf.d/phpmyadmin.conf
      fi
   fi


   if ! test -e /etc/apache-ssl/conf.d/squirrelmail.conf; then
      if test -e /etc/squirrelmail/apache.conf; then
                ln -s /etc/squirrelmail/apache.conf /etc/apache-ssl/conf.d/squirrelmail.conf
      fi
   fi

   if ! test -e /etc/apache/conf.d/squirrelmail.conf; then
      if test -e /etc/squirrelmail/apache.conf; then
                ln -s /etc/squirrelmail/apache.conf /etc/apache/conf.d/squirrelmail.conf
      fi
   fi


# Apache will not start without this file
touch /var/alternc/apacheconf/override_php.conf

   if ! test -e /etc/apache-ssl/conf.d/override_php.conf; then
                ln -s /var/alternc/apacheconf/override_php.conf /etc/apache-ssl/conf.d/override_php.conf
   fi


   if ! test -e /etc/apache/conf.d/override_php.conf; then
                ln -s /var/alternc/apacheconf/override_php.conf /etc/apache/conf.d/override_php.conf
   fi



    echo "running alternc.install"
    alternc.install

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;

esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

# vim: et sw=4
